// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OdataTestWebApp.Configurations;

#nullable disable

namespace OdataTestWebApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230920100353_CustomerDao_Add_Or_Update_Generated_Column")]
    partial class CustomerDao_Add_Or_Update_Generated_Column
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OdataTestWebApp.Models.Daos.CustomerDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("OdataTestWebApp.Models.Daos.OrderDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer")
                        .HasColumnName("CustomerId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OdataTestWebApp.Models.Daos.Setting.SettingDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsProduction")
                        .HasColumnType("boolean");

                    b.Property<bool>("ShouldEnablePerformanceMode")
                        .HasColumnType("boolean");

                    b.Property<int>("SubItemId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SubItemId")
                        .IsUnique();

                    b.ToTable("Setting");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsProduction = true,
                            ShouldEnablePerformanceMode = true,
                            SubItemId = 1
                        });
                });

            modelBuilder.Entity("OdataTestWebApp.Models.Daos.Setting.SettingSubItemDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SettingId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("SettingSubItem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "",
                            SettingId = 1
                        });
                });

            modelBuilder.Entity("OdataTestWebApp.Models.Daos.OrderDao", b =>
                {
                    b.HasOne("OdataTestWebApp.Models.Daos.CustomerDao", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("OdataTestWebApp.Models.Daos.Setting.SettingDao", b =>
                {
                    b.HasOne("OdataTestWebApp.Models.Daos.Setting.SettingSubItemDao", "SubItem")
                        .WithOne("Setting")
                        .HasForeignKey("OdataTestWebApp.Models.Daos.Setting.SettingDao", "SubItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubItem");
                });

            modelBuilder.Entity("OdataTestWebApp.Models.Daos.CustomerDao", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("OdataTestWebApp.Models.Daos.Setting.SettingSubItemDao", b =>
                {
                    b.Navigation("Setting")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
